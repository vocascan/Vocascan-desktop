name: CI

on:
  - push
  - pull_request

jobs:
  test:
    name: ðŸ§ª Test
    runs-on: ubuntu-latest
    if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install
        run: npm i

      - name: Lint js
        run: npm run lint:js -- --max-warnings=0

  release:
    name: ðŸ“¦ Build and Publish
    needs: test
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ${{ matrix.os }}

    strategy:
      # keep building even if another job is failed
      fail-fast: false
      matrix:
        os: [windows-latest] #, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: |
          npm install
          cd src/vocascan-frontend && npm install

      - name: Add custom metadata
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require("fs");
            const { execSync } = require("child_process");
            const desktopJSON = require("./package.json");
            const frontendJSON = require("./src/vocascan-frontend/package.json");

            const currentDate = new Date().toISOString();

            desktopJSON.metadata = {
              commit: context.sha,
              date: currentDate,
              runId: context.runId,
              runNumber: context.runNumber,
            }

            frontendJSON.metadata = {
              commit: execSync("git rev-parse HEAD", { cwd: "./src/vocascan-frontend" }).toString().trim(),
              date: currentDate,
              runRepo: "vocascan-desktop",
              runId: context.runId,
              runNumber: context.runNumber,
            }

            fs.writeFileSync("./package.json", JSON.stringify(desktopJSON, null, 2), { encoding: "utf-8" })
            fs.writeFileSync("./src/vocascan-frontend/package.json", JSON.stringify(frontendJSON, null, 2), { encoding: "utf-8" })

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        if: false # startsWith(matrix.os, 'ubuntu')
        with:
          # Log in to Snap Store
          snapcraft_token: ${{ secrets.SNAPCRAFT_TOKEN }}

      - name: Install RPM
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt install rpm

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          build_script_name: build:react
          github_token: ${{ secrets.VOCASCAN_BOT_TOKEN }}
          release: true
